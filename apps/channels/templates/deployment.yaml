apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "channels.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "channels.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "channels.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "channels.selectorLabels" . | nindent 8 }}
      annotations:
        diun.enable: "true"
        autoheal: "true"
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 1000
        readOnlyRootFilesystem: false
      containers:
      - name: channels
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 8089
          name: http
        env:
        - name: PUID
          value: "{{ .Values.env.puid }}"
        - name: PGID
          value: "{{ .Values.env.pgid }}"
        - name: TZ
          value: "{{ .Values.env.tz }}"
        - name: CHROME_BIN
          value: "/usr/lib/chromium/chromium"
        - name: CHROME_FLAGS
          value: "--no-sandbox --disable-dev-shm-usage --disable-gpu --headless --disable-crash-reporter --no-crashpad --user-data-dir=/tmp/chrome-user-data --crash-dumps-dir=/tmp/chrome-user-data/crash_dumps --disable-extensions --disable-plugins --disable-features=VizDisplayCompositor"
        volumeMounts:
        - name: config
          mountPath: /channels-dvr
          subPath: {{ .Values.volumes.config.subPath }}
        - name: dvr
          mountPath: /mnt/downloads/plexdvr
          subPath: {{ .Values.volumes.dvr.subPath }}
        - name: dri
          mountPath: /dev/dri
        livenessProbe:
          httpGet:
            path: /
            port: 8089
          initialDelaySeconds: {{ .Values.healthcheck.startPeriod }}
          periodSeconds: {{ .Values.healthcheck.interval }}
          timeoutSeconds: {{ .Values.healthcheck.timeout }}
          failureThreshold: {{ .Values.healthcheck.retries }}
        startupProbe:
          httpGet:
            path: /
            port: 8089
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /
            port: 8089
          initialDelaySeconds: {{ .Values.healthcheck.startPeriod }}
          periodSeconds: {{ .Values.healthcheck.interval }}
          timeoutSeconds: {{ .Values.healthcheck.timeout }}
          failureThreshold: {{ .Values.healthcheck.retries }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: {{ include "channels.fullname" . }}-config
      - name: dvr
        persistentVolumeClaim:
          claimName: {{ .Values.volumes.dvr.pvcName }}
      - name: dri
        hostPath:
          path: /dev/dri
      restartPolicy: Always
      tolerations:
      - key: "node.kubernetes.io/disk-pressure"
        operator: "Exists"
        effect: "NoSchedule"
